@{
    ViewData["Title"] = "Schedule";
    var dates = (List<DateTime>)ViewBag.Dates; // Current page dates
    var allDates = (List<DateTime>)ViewBag.AllDates ?? dates; // All dates for calculations
    var times = (List<TimeSpan>)ViewBag.Times;
    var schedule = (Dictionary<TimeSpan, Dictionary<DateTime, string>>)ViewBag.ScheduleMap;
    var message = ViewBag.Message as string;
    
    // Pagination logic
    var pageSize = 5;
    var currentPage = ViewBag.CurrentPage ?? 0;
    var totalPages = allDates != null ? (int)Math.Ceiling((double)allDates.Count / pageSize) : 0;
    var displayDates = dates ?? new List<DateTime>(); // dates already contains current page items
    var hasPrevious = currentPage > 0;
    var hasNext = currentPage < totalPages - 1;
}
<style>
    .card-header {
  max-width: fit-content;  
  width: auto;  
  padding: 5px 15px;
        background-color: #E5D9D9;
  margin: -15 auto; 
}

.card-header h2 {
  margin: 0;  
  padding: 5px 0;
            color: #B28989;
        }
        h5{
        color: #B28989;
        }
  .scheduled-slot {
        padding: 8px;
        border-radius: 4px;
        background-color: #f8f9fa;
        border-left: 5px solid #007bff;
    }

    .table td {
        vertical-align: middle;
        min-height: 60px;
    }

    .thead-dark th {
        border-color: #495057;
        background-color: #F6EFEF;
        color: #B28989;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0,123,255,.1);
    }

    .date-navigation {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .date-navigation .btn {
        min-width: 80px;
    }
    .button-add{
        padding: 5px 15px; 
    max-width: fit-content;  
    }
    .btn-button{
        background-color:#B28989;
        color:white;
    }
  
</style>
 

   
                   <div class="card">
  <div class="card-header text-black">
                    <h2 class="mb-0">
                        <i class="fas fa-calendar"></i> Today’s Schedules
                    </h2>
                </div>
                <div class="button-add">
                <a asp-action="Create" class="btn btn-button">
                    <i class="fas fa-plus"></i> Add New Schedule
                </a>
       </div>

       <div class="m-4">

            @if (displayDates.Any() && times.Any())
            {
                <!-- Navigation Controls -->
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div class="date-navigation">
                        @if (hasPrevious)
                        {
                            <a asp-action="Index" asp-route-page="@(currentPage - 1)" class="btn btn-outline-secondary btn-sm">
                                <i class="fas fa-chevron-left"></i> Previous
                            </a>
                        }
                        else
                        {
                            <button class="btn btn-outline-secondary btn-sm" disabled>
                                <i class="fas fa-chevron-left"></i> Previous
                            </button>
                        }
                        
                        <span class="mx-3 text-muted">
                            Page @(currentPage + 1) of @totalPages
                            (@displayDates.Count of @allDates.Count dates)
                        </span>
                        
                        @if (hasNext)
                        {
                            <a asp-action="Index" asp-route-page="@(currentPage + 1)" class="btn btn-outline-secondary btn-sm">
                                Next <i class="fas fa-chevron-right"></i>
                            </a>
                        }
                        else
                        {
                            <button class="btn btn-outline-secondary btn-sm" disabled>
                                Next <i class="fas fa-chevron-right"></i>
                            </button>
                        }
                    </div>
                    
                    <!-- Date Range Display -->
                    <div class="text-muted">
                        @if (displayDates.Any())
                        {
                            <small>
                                Showing: @displayDates.First().ToString("MMM dd") - @displayDates.Last().ToString("MMM dd, yyyy")
                            </small>
                        }
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-bordered table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th class="text-center" style="width: 120px;">Time</th>
                                @foreach (var date in displayDates)
                                {
                                    <th class="text-center">
                                        @date.ToString("ddd")
                                        <br>
                                        <small>@date.ToString("MM/dd/yy")</small>
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var time in times)
                            {
                                <tr>
                                    <td class="font-weight-bold text-center align-middle bg-light">
                                        @DateTime.Today.Add(time).ToString("h:mm tt")
                                    </td>
                                    @foreach (var date in displayDates)
                                    {
                                        <td class="text-center align-middle">
                                            @{
                                                var personName = schedule.ContainsKey(time) && schedule[time].ContainsKey(date)
                                                ? schedule[time][date]
                                                : "Time Slots";
                                                var isAvailable = personName == "Time Slots";
                                            }

                                            @if (isAvailable)
                                            {
                                                <span class="text-muted">
                                                    <i class="fas fa-calendar-plus"></i> Time Slots
                                                </span>
                                            }
                                            else
                                            {
                                                <div class="scheduled-slot">
                                                    <strong class="text-primary">@personName</strong>
                                                    <div class="mt-1">
                                                        @{
                                                            var scheduleRecord = ViewContext.HttpContext.RequestServices
                                                            .GetService(typeof(DCAS.Data.DCASContext)) as DCAS.Data.DCASContext;
                                                        }
                                                        
                                                    </div>
                                                </div>
                                            }
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="mt-3">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">Schedule Summary</h5>
                                </div>
                                <div class="card-body">
                                    <p><strong>Total Time Slots:</strong>  @schedule.Values.SelectMany(d => d.Values).Count(v => v == "Time Slots")</p>
                                    <p><strong>Scheduled:</strong> @schedule.Values.SelectMany(d => d.Values).Count(v => v != "Time Slots" && v != "Available Slots")</p>
                                    <p><strong>Available Slots:</strong> @schedule.Values.SelectMany(d => d.Values).Count(v => v == "Available Slots")</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">Legend</h5>
                                </div>
                                <div class="card-body">
                                    <p>
                                        <i class="fas fa-calendar-plus text-muted"></i>
                                        <span class="text-muted"> Available Slot ( No Person Name )</span>
                                    </p>
                                    <p>
                                        <i class="fas fa-calendar-plus text-muted"></i>
                                        <span class="text-muted"> Available Time ( Have Time Slot )</span>
                                    </p>
                                    <p>
                                        <span class="scheduled-slot d-inline-block" style="border-left: 5px solid #007bff; padding: 4px 8px; background-color: #f8f9fa;">
                                            <strong class="text-primary">Person Name</strong>
                                        </span> - Occupied Slot
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-calendar-alt fa-3x text-muted mb-3"></i>
                    <h3 class="text-muted">No Schedules Yet</h3>
                    <p class="text-muted">Get started by creating your first schedule entry.</p>
                    <a asp-action="Create" class="btn btn-button btn-lg">
                        <i class="fas fa-plus"></i> Create First Schedule
                    </a>
                </div>
            }
        </div>
</div>

