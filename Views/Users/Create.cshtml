@model DCAS.Models.Users

@{
    ViewData["Title"] = "Create";
}

<style>

    .card-header {
        max-width: fit-content;
        width: auto;
        padding: 5px 15px;
        background-color: #E5D9D9;
        margin: -15px auto;
    }

        .card-header h2 {
            margin: 0;
            padding: 5px 0;
            color: #B28989;
        }
        h2{
        color: #B28989;
        }
        .btn-Create{
        background-color: #E5D9D9;
        color: #B28989;
        }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header text-white">
                <h2 class="mb-0">
                    <i class="fas fa-user-plus"></i> Create User's'
                </h2>
            </div>
            <div class="m-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <h2>Personal Information</h2>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="PhoneNumber" class="control-label"></label>
                        <input asp-for="PhoneNumber" class="form-control" />
                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Gender" class="control-label"></label>
                        @* REPLACED INPUT WITH SELECT DROPDOWN *@
                        <select asp-for="Gender" class="form-control" required>
                            <option value="">--- Select Gender ---</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </select>
                        <span asp-validation-for="Gender" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="BirthDate" class="control-label"></label>
                        @* Assuming BirthDate should be a date input type. Added id for JavaScript targeting. *@
                        <input asp-for="BirthDate" id="BirthDate" class="form-control" type="date" />
                        <span asp-validation-for="BirthDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Age" class="control-label"></label>
                        @* Added id for JavaScript targeting. Made it readonly as it's auto-calculated. *@
                        <input asp-for="Age" id="Age" class="form-control" type="number" readonly />
                        <span asp-validation-for="Age" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Nationality" class="control-label"></label>
                        <input asp-for="Nationality" class="form-control" />
                        <span asp-validation-for="Nationality" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Image" class="control-label">Upload Image *</label>
                        @* Note: The model state check for the image used "Profile" in your original, but the input name is "Image". I've kept the input name "Image" but left the Profile model state check in case that's correct for your model. *@
                        <input name="Image" type="file" class="form-control" accept="image/*" required />
                        @if (ViewData.ModelState["Profile"]?.Errors.Count > 0)
                        {
                            <span class="text-danger">@ViewData.ModelState["Profile"].Errors.FirstOrDefault()?.ErrorMessage</span>
                        }
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label asp-for="Address" class="control-label"></label>
                        <input asp-for="Address" class="form-control" />
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <hr />

            <h2>Employment Information</h2>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Role" class="control-label"></label>
                        @* REPLACED INPUT WITH SELECT DROPDOWN *@
                        <select asp-for="Role" class="form-control" required>
                            <option value="">--- Select Role ---</option>
                            <option value="Admin">Admin</option>
                            <option value="Staff">Staff</option>
                        </select>
                        <span asp-validation-for="Role" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="JobTitle" class="control-label"></label>
                        <input asp-for="JobTitle" class="form-control" />
                        <span asp-validation-for="JobTitle" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Position" class="control-label"></label>
                        <input asp-for="Position" class="form-control" />
                        <span asp-validation-for="Position" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Specialization" class="control-label"></label>
                        <input asp-for="Specialization" class="form-control" />
                        <span asp-validation-for="Specialization" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="StartDate" class="control-label"></label>
                        @* Assuming StartDate should be a date input type *@
                        <input asp-for="StartDate" class="form-control" type="date" />
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="WorkStatus" class="control-label"></label>
                        <input asp-for="WorkStatus" class="form-control" />
                        <span asp-validation-for="WorkStatus" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <hr />

            <h2>Account Credentials</h2>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Username" class="control-label"></label>
                        <input asp-for="Username" class="form-control" />
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Password" class="control-label"></label>
                        <input asp-for="Password" class="form-control" type="password" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <hr />

            <div class="form-group mt-4">
                <input type="submit" value="Create" class="btn btn-Create" />
                    <a asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>
</div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const birthDateInput = document.getElementById('BirthDate');
            const ageInput = document.getElementById('Age');

            // Function to calculate age
            function calculateAge() {
                const birthDateValue = birthDateInput.value;

                if (birthDateValue) {
                    const birthDate = new Date(birthDateValue);
                    const today = new Date();

                    let age = today.getFullYear() - birthDate.getFullYear();
                    const monthDifference = today.getMonth() - birthDate.getMonth();

                    // Adjust age if the birthday hasn't occurred yet this year
                    if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {
                        age--;
                    }

                    // Set the calculated age to the Age input field
                    ageInput.value = age;
                } else {
                    // Clear age if birthdate is empty
                    ageInput.value = '';
                }
            }

            // Attach the function to the 'change' event of the BirthDate input
            birthDateInput.addEventListener('change', calculateAge);

            // Also call it once on load if the field might be pre-populated (e.g., in an Edit view)
            calculateAge();
        });
    </script>
}